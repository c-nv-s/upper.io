- hosts: "{{ host }}"

  tasks:

    - name: remove destination
      file:
        path: /data/cockroachdb
        state: absent

    - name: ensure /data/cockroachdb directory
      file:
        path: /data/cockroachdb
        state: directory

    - name: ensure /data/cockroachdb/data directory
      file:
        path: /data/cockroachdb/storage
        state: directory

    - name: upload sql
      copy:
        src: ./booktown.sql
        dest: /data/cockroachdb/booktown.sql

    - name: upload certs dir
      copy:
        src: ./certs
        mode: '600'
        dest: /data/cockroachdb

    - name: upload private dir
      copy:
        src: ./private
        mode: '600'
        dest: /data/cockroachdb

    - name: add docker network
      docker_network:
        name: upper-network
        state: present
        appends: yes

    - name: run cockroachdb
      docker_container:
        image: cockroachdb/cockroach:{{ image_tag }}
        name: cockroachdb.demo.upper.io
        restart_policy: always
        recreate: yes
        memory: 1024m
        memory_swap: 0
        memory_swappiness: 0
        ulimits:
          - nofile:256:2048
          - nproc:128
        oom_killer: yes
        volumes:
          - /data/cockroachdb/certs:/etc/certs
          - /data/cockroachdb/storage:/cockroachdb/cockroachdb-data
        networks:
          - name: upper-network
        command:
          "start-single-node --certs-dir=/etc/certs --store=node --http-addr=localhost:8080 --listen-addr=0.0.0.0:26257"
        ports:
          - 127.0.0.1:26257:26257

    - name: wait a few seconds for start...
      pause:
        seconds: 5

    - name: init cockroachdb
      docker_container:
        image: cockroachdb/cockroach:{{ image_tag }}
        name: cockroach-init
        volumes:
          - /data/cockroachdb/certs:/etc/certs
          - /data/cockroachdb/storage:/cockroachdb/cockroachdb-data
        networks:
          - name: upper-network
        command:
          "init --certs-dir=/etc/certs --host=cockroachdb.demo.upper.io:26257"

    - name: wait a few seconds for init...
      pause:
        seconds: 5

    - name: setup database
      docker_container:
        image: cockroachdb/cockroach:{{ image_tag }}
        name: cockroach-init
        volumes:
          - /data/cockroachdb/certs:/etc/certs
        networks:
          - name: upper-network
        command:
          - sql
          - --certs-dir=/etc/certs
          - --host=cockroachdb.demo.upper.io:26257
          - |
              -e "
                CREATE USER {{ cockroachdb_user }} WITH PASSWORD '{{ cockroachdb_password }}';
                CREATE DATABASE {{ cockroachdb_db }};
                GRANT ALL ON DATABASE {{ cockroachdb_db }} TO {{ cockroachdb_user }};
              "

    - name: load database dump
      shell: "PGPASSWORD={{ cockroachdb_password }} psql -h127.0.0.1 -p26257 -U{{ cockroachdb_user }} -d {{cockroachdb_db}} 'sslmode=require sslrootcert=/data/cockroachdb/certs/ca.crt' < /data/cockroachdb/booktown.sql"

    - name: remove write privileges
      docker_container:
        image: cockroachdb/cockroach:{{ image_tag }}
        name: cockroach-init
        volumes:
          - /data/cockroachdb/certs:/etc/certs
        networks:
          - name: upper-network
        command:
          - sql
          - --certs-dir=/etc/certs
          - --host=cockroachdb.demo.upper.io:26257
          - |
              -e "
                REVOKE ALL ON DATABASE {{ cockroachdb_db }} FROM {{  cockroachdb_user }};
                REVOKE ALL ON {{ cockroachdb_db }}.* FROM {{  cockroachdb_user }};
                GRANT SELECT ON {{ cockroachdb_db }}.* TO {{  cockroachdb_user }};
              "

    - name: remove client.root.key
      file:
        path: /data/cockroachdb/certs/client.root.key
        state: absent

    - name: remove client.root.crt
      file:
        path: /data/cockroachdb/certs/client.root.crt
        state: absent
